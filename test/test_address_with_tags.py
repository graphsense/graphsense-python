# coding: utf-8

"""
    GraphSense API

    GraphSense API  # noqa: E501

    The version of the OpenAPI document: 0.4.4
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import graphsense
from graphsense.models.address_with_tags import AddressWithTags  # noqa: E501
from graphsense.rest import ApiException

class TestAddressWithTags(unittest.TestCase):
    """AddressWithTags unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AddressWithTags
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = graphsense.models.address_with_tags.AddressWithTags()  # noqa: E501
        if include_optional :
            return AddressWithTags(
                address = '0', 
                balance = graphsense.models.values.values(
                    eur = 56, 
                    usd = 56, 
                    value = 56, ), 
                first_tx = graphsense.models.tx_summary.tx_summary(
                    height = 1, 
                    timestamp = 56, 
                    tx_hash = '0', ), 
                in_degree = 56, 
                last_tx = graphsense.models.tx_summary.tx_summary(
                    height = 1, 
                    timestamp = 56, 
                    tx_hash = '0', ), 
                no_incoming_txs = 56, 
                no_outgoing_txs = 56, 
                out_degree = 56, 
                total_received = graphsense.models.values.values(
                    eur = 56, 
                    usd = 56, 
                    value = 56, ), 
                total_spent = graphsense.models.values.values(
                    eur = 56, 
                    usd = 56, 
                    value = 56, ), 
                tags = [
                    graphsense.models.tag.tag(
                        abuse = '0', 
                        active = True, 
                        address = '0', 
                        category = '0', 
                        currency = '0', 
                        label = '0', 
                        lastmod = 56, 
                        source = '0', 
                        tagpack_uri = '0', )
                    ]
            )
        else :
            return AddressWithTags(
                address = '0',
                balance = graphsense.models.values.values(
                    eur = 56, 
                    usd = 56, 
                    value = 56, ),
                first_tx = graphsense.models.tx_summary.tx_summary(
                    height = 1, 
                    timestamp = 56, 
                    tx_hash = '0', ),
                in_degree = 56,
                last_tx = graphsense.models.tx_summary.tx_summary(
                    height = 1, 
                    timestamp = 56, 
                    tx_hash = '0', ),
                no_incoming_txs = 56,
                no_outgoing_txs = 56,
                out_degree = 56,
                total_received = graphsense.models.values.values(
                    eur = 56, 
                    usd = 56, 
                    value = 56, ),
                total_spent = graphsense.models.values.values(
                    eur = 56, 
                    usd = 56, 
                    value = 56, ),
        )

    def testAddressWithTags(self):
        """Test AddressWithTags"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
